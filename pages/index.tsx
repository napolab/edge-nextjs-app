import { InferGetServerSidePropsType, NextPage, GetServerSideProps } from 'next';
import Head from 'next/head'

type Props = InferGetServerSidePropsType<typeof getServerSideProps>;

type Todo = {
  userId: number;
  id: number;
  title: string;
  completed: boolean;
};

const Home: NextPage<Props> = (props) =>  {
const todo = props.todo;

  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
      <h1>{props.name}</h1>
      <ul>
        {todo.map((item) => (
          <li key={item.id}>{item.title}</li>
        ))}
      </ul>
      </main>

    </div>
  )
}

export default Home

export const getServerSideProps = async () => {
  const stmt = process.env.DB.prepare("select * from posts;");
  const out = await stmt.all()

  const response = await fetch('https://jsonplaceholder.typicode.com/todos');
  const todo: Todo[] = await response.json();
  const name = process.env.APP_NAME
  return {
    props: {
      todo,
      name,
      posts: out.results ?? []
    },
  };
};